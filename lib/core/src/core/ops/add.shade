module Core.Ops.Add (Add(..), (+)) where

import Prim

infixl 6 add as (+)

class Add a where
    fn add :: a -> a -> a

instance addInt8 :: Add Int8 where
    fn add a b = add_i8 a b

instance addInt16 :: Add Int16 where
    fn add a b = add_i16 a b

instance addInt32 :: Add Int32 where
    fn add a b = add_i32 a b

instance addInt64 :: Add Int64 where
    fn add a b = add_i64 a b

instance addInt128 :: Add Int128 where
    fn add a b = add_i128 a b

instance addUint8 :: Add Uint8 where
    fn add a b = add_u8 a b

instance addUint16 :: Add Uint16 where
    fn add a b = add_u16 a b

instance addUint32 :: Add Uint32 where
    fn add a b = add_u32 a b

instance addUint64 :: Add Uint64 where
    fn add a b = add_u64 a b

instance addUint128 :: Add Uint128 where
    fn add a b = add_u128 a b

[intrinsic] foreign fn add_i8 :: Int8 -> Int8 -> Int8
[intrinsic] foreign fn add_i16 :: Int16 -> Int16 -> Int16
[intrinsic] foreign fn add_i32 :: Int32 -> Int32 -> Int32
[intrinsic] foreign fn add_i64 :: Int64 -> Int64 -> Int64
[intrinsic] foreign fn add_i128 :: Int128 -> Int128 -> Int128

[intrinsic] foreign fn add_u8 :: Uint8 -> Uint8 -> Uint8
[intrinsic] foreign fn add_u16 :: Uint16 -> Uint16 -> Uint16
[intrinsic] foreign fn add_u32 :: Uint32 -> Uint32 -> Uint32
[intrinsic] foreign fn add_u64 :: Uint64 -> Uint64 -> Uint64
[intrinsic] foreign fn add_u128 :: Uint128 -> Uint128 -> Uint128
