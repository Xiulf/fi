module Data.Option =

import Core
import Core.Error (Try, Unwrap)
import Core.Mappable
import Intrinsics (crash)

type Option t =
    | None
    | Some t

member (Option t) of Default =
    default = None

member Option of Try =
    ret x = Some x

    bind (Some x) f = f x
    bind None _ = None

member Option of Unwrap =
    unwrap (Some x) = x
    unwrap None = crash "cannot unwrap a none value"

    unwrap_or (Some x) _ = x
    unwrap_or None def = def

member Option of Mappable =
    map (Some x) f = Some (f x)
    map None _ = None
