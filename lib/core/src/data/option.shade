module Data.Option =

import Core
import Core.Error (Try, Unwrap)
import Intrinsics (crash)

type Option t =
    | None
    | Some t

member (Option t) of Default =
    default = None

member Option of Try =
    ret x = Some x

    bind self f = case self of
        Some x -> f x
        None -> None

member Option of Unwrap =
    unwrap self = case self of
        Some x -> x
        None -> crash "cannot unwrap a none value"

    unwrap_or self def = case self of
        Some x -> x
        None -> def
