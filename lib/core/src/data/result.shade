module Core.Data.Result =

import Core.Data.Option (Some, None)
import Core.Error (Try, Unwrap)
import Intrinsics (crash)

type Result e t =
    | Error e
    | Ok t

ok (Ok x) = Some x
ok (Error _) = None

err (Error e) = Some e
err (Ok _) = None

unwrap_err (Error e) = e
unwrap_err (Ok _) = crash "cannot unwrap_err an ok value"

member (Result e) of Try =
    ret x = Ok x

    bind (Ok x) f = f x
    bind (Error e) _ = Error e

member (Result e) of Unwrap =
    unwrap (Ok x) = x
    unwrap (Error _) = crash "cannot unwrap an err value"

    unwrap_or (Ok x) _ = x
    unwrap_or (Error _) def = def
