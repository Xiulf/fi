module Core.Ops =


infixl 6 (+) = add
infixl 6 (-) = sub

infixl 7 (*) = mul
infixl 7 (/) = div
infixl 7 (%) = rem

infixl 8 (#) = index


trait Add t =
    add :: t, t -> t

trait Sub t =
    sub :: t, t -> t

trait Mul t =
    mul :: t, t -> t

trait Div t =
    div :: t, t -> t

trait Rem t =
    rem :: t, t -> t

trait Index t i o a' | t i -> o =
    @deref
    index :: ref(a') t, i -> ref(a') o
