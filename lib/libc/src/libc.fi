module LibC =

import Prim
import Intrinsics (unsafe, transmute)

type C_Char    = Int8
type C_Short   = Int16
type C_Int     = Int32
type C_Long    = Int64
type C_Float   = Float32
type C_Double  = Float64
type C_Str     = Ptr C_Char
type C_Array t = Ptr t

type Size_T  = Uint
type Ssize_T = Int

NULL :: forall t. Ptr t
NULL = unsafe (transmute (0 :: Uint))

const STDIN_FILENO  = 0 :: C_Int
const STDOUT_FILENO = 1 :: C_Int
const STDERR_FILENO = 2 :: C_Int

; io
foreign puts :: C_Str -> C_Int
foreign write :: C_Int -> Ptr C_Char -> Size_T -> Ssize_T

; mem
foreign malloc :: forall t. Size_T -> Ptr t
foreign free :: forall t. Ptr t -> ()
foreign memcpy :: forall t. Ptr t -> Ptr t -> Uint -> Ptr t
foreign memmove :: forall t. Ptr t -> Ptr t -> Uint -> Ptr t
