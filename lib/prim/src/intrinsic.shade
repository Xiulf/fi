module intrinsics =

import prim

infixr 0 apply as ($)

@intrinsic foreign fun add_i32 :: Int32 -> Int32 -> Int32
@intrinsic foreign fun sub_i32 :: Int32 -> Int32 -> Int32
@intrinsic foreign fun mul_i32 :: Int32 -> Int32 -> Int32
@intrinsic foreign fun div_i32 :: Int32 -> Int32 -> Int32
@intrinsic foreign fun rem_i32 :: Int32 -> Int32 -> Int32
@intrinsic foreign fun eq_i32  :: Int32 -> Int32 -> Bool
@intrinsic foreign fun ge_i32  :: Int32 -> Int32 -> Bool

@intrinsic foreign fun u32_to_u8 :: Uint32 -> Uint8

@intrinsic foreign fun alloc   :: for ptr to. Pointer ptr to => Uint -> ptr
@intrinsic foreign fun dealloc :: for ptr to. Pointer ptr to => ptr -> ()

@intrinsic foreign fun size_of :: for t. Proxy t -> Uint

@intrinsic foreign fun addr_of    :: for ptr to. Pointer ptr to => to -> ptr
@intrinsic foreign fun ptr_offset :: for ptr to. Pointer ptr to => ptr -> Int -> ptr
@intrinsic foreign fun ptr_read   :: for ptr to. Pointer ptr to => ptr -> to
@intrinsic foreign fun ptr_write  :: for ptr to. Pointer ptr to => ptr -> to -> ()

@intrinsic foreign fun apply         :: for r a. (a -> r) -> a -> r
@intrinsic foreign fun transmute     :: for a b. Unsafe => a -> b
@intrinsic foreign fun unsafe        :: for a. (Unsafe => a) -> a
@intrinsic foreign fun crash         :: for a. Partial => a
@intrinsic foreign fun unsafePartial :: for a. (Partial => a) -> a
