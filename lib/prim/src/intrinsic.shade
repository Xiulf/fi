module Intrinsics =

import Prim

infixr 0 apply as ($)

@intrinsic foreign iadd :: i -> i -> i where Integer i
@intrinsic foreign isub :: i -> i -> i where Integer i
@intrinsic foreign imul :: i -> i -> i where Integer i
@intrinsic foreign idiv :: i -> i -> i where Integer i
@intrinsic foreign irem :: i -> i -> i where Integer i
@intrinsic foreign ieq  :: i -> i -> Bool where Integer i
@intrinsic foreign icmp :: i -> i -> Int where Integer i

; @intrinsic foreign iconvert :: a -> b where Integer a, Integer b
@intrinsic foreign u32_to_u8 :: Uint32 -> Uint8

@intrinsic foreign alloc   :: Uint -> ptr where Pointer ptr to
@intrinsic foreign dealloc :: ptr -> Unit where Pointer ptr to

@intrinsic foreign size_of :: Proxy t -> Uint

@intrinsic foreign addr_of    :: to -> ptr where Pointer ptr to
@intrinsic foreign ptr_offset :: ptr -> Int -> ptr where Pointer ptr to
@intrinsic foreign ptr_read   :: ptr -> to where Pointer ptr to
@intrinsic foreign ptr_write  :: ptr -> to -> Unit where Pointer ptr to

@intrinsic foreign apply     :: (a -> r) -> a -> r
@intrinsic foreign transmute :: a -> b where Unsafe
@intrinsic foreign unsafe    :: (a where Unsafe) -> a
@intrinsic foreign crash     :: Str -> Never where Partial
@intrinsic foreign partial   :: (a where Partial) -> a
