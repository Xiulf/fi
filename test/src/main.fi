module Main =

import Core
import Intrinsics (transmute, size_of, Type)


module C =
    import Core

    foreign malloc :: Uptr -> Ptr ()
    foreign free :: Ptr () -> ()


malloc () :: Ptr a = C.malloc (size_of (Proxy :: Proxy a)) . transmute
free p = C.free (p . transmute)


@main
main () =
    x = malloc () :: Ptr Int64
    y = malloc () :: Ptr Int32
    free x
    free y
    0
