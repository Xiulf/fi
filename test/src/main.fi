module Main =

import Core
import Intrinsics


module C =
    import Core

    foreign malloc :: Uptr -> Ptr ()
    foreign free :: Ptr () -> ()
    foreign malloca :: Uptr -> Ptr ()

    foreign _write :: Int32, Ptr (), Uint32 -> Int32


malloc () :: Ptr a = C.malloc (size_of (Proxy :: Proxy a)) . transmute
free p = C.free (p . transmute)


@main
main () =
    ptr, len = transmute "test" :: Pair (Ptr Int8) Uptr
    ptr = transmute ptr
    len = iconvert len
    x = C._write 1 ptr len
    0
