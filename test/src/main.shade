module Main

-- import Fmt
-- import Fmt.Arg as FmtArg

alias CArray<T> = [*]T;
alias cstr = [*:0]u8;

@main
fn main(argc: i32, argv: CArray<cstr>) -> i32
    identity(0)
end

fn identity<T>(x: T) -> T
    x
end

-- iface Any end
-- 
-- impl<T> Any for T end
-- 
-- impl Any
--     fn downcast<T>() -> T
--         self.(*(*T, *())).*.0.*
--     end
-- 
--     fn downcast_ref<T>() -> *T
--         self.(*(*T, *())).*.0
--     end
-- end
