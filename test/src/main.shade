module Main =

import Core
import Data.List (first)
import Monad.Writer
import Monad.Reader
import Monad.State
import Js.Console


@main
main :: Effect ()
main =
    let _, a = runWriter test
    let b = runReader test2 ("a":"b":Nil)
    let c = runState test3 234
    print a b c

test :: Writer Str ()
test = try
    write "abc"
    write "def"
    write "ghi"
    ret ()

test2 :: forall a. Reader (List a) (Option a)
test2 = try
    a <- read
    ret $ first a

test3 :: forall m. m () where MonadState Int m
test3 = try
    a <- get
    put 12
    let _ = print a :: Effect ()
    ret ()
